spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/mlstack
    username: ${database_username}
    password: ${database_password}
    driver-class-name: org.postgresql.Driver
#  jpa:
#    database-platform: io.github.jhipster.domain.util.FixedPostgreSQL82Dialect
#    database: POSTGRESQL
#    show-sql: true
#    properties:
#      hibernate.id.new_generator_mappings: true
#      hibernate.cache.use_second_level_cache: false
#      hibernate.cache.use_query_cache: false
#      hibernate.generate_statistics: true
  cloud:
    consul:
      discovery:
        enabled: true
  jpa:
    hibernate:
      ddl-auto: update
  jackson:
    serialization: {INDENT_OUTPUT: true, WRITE_DATES_AS_TIMESTAMPS: false}

endpoints:
  beans:
    id: springbeans
    sensitive: false
    enabled: true



management:
  security:
    enabled: false

#
# Microsoft Cognitive Services
#
cognitive:
  service-url: ${cognitive_service_url}
  subscription-key: ${cognitive_subscription_key}
  person-group-id: "cognitive_3500"
  person-group-name: "employee_collection"
  threshold: 0.5
  max-candidates: 2


#
# AWS Rekognition Services
#
aws:
  region: ${aws_region}
  access-key: ${aws_access_key}
  secret-key: ${aws_secret_key}
  s3:
    bucket: "mlstack"
    bucket-folder: "index"
  rekognition:
    collection-id: "employee_collection"
    max-faces: 1

#
# threshold point where confidence below is rejected
#
threshold-acceptance: 85

#
# Job config, every 15 seconds
#
syncjob:
  frequency: 15000

client:
  service:
    name: client-service
  endpoint: http://localhost:8080
  user:
    username: admin
    password: admin

face:
  standard:
    width: 120
    height: 120
  directory:
    name:
      delimiter: "-"
  db:
    path: "C:/etc/mlstack/facedb"

model:
  storage:
    path: "C:/etc/mlstack/models"


tensor:
  graph:
    path: "C:/Users/mahmoud/Documents/datascience/models/face_net_graph_6.pb"
  labels:
    path: "C:/Users/mahmoud/Documents/datascience/models/retrained_labels_6.txt"

preprocesser:
  host: "http://127.0.0.1:5000"